// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLToAXI4(
  input         clock,
                reset,
                auto_in_a_valid,
  input  [2:0]  auto_in_a_bits_opcode,
                auto_in_a_bits_size,
  input  [6:0]  auto_in_a_bits_source,
  input  [31:0] auto_in_a_bits_address,
  input         auto_in_a_bits_user_amba_prot_bufferable,
                auto_in_a_bits_user_amba_prot_modifiable,
                auto_in_a_bits_user_amba_prot_readalloc,
                auto_in_a_bits_user_amba_prot_writealloc,
                auto_in_a_bits_user_amba_prot_privileged,
                auto_in_a_bits_user_amba_prot_secure,
                auto_in_a_bits_user_amba_prot_fetch,
  input  [3:0]  auto_in_a_bits_mask,
  input  [31:0] auto_in_a_bits_data,
  input         auto_in_d_ready,
                auto_out_aw_ready,
                auto_out_w_ready,
                auto_out_b_valid,
  input  [6:0]  auto_out_b_bits_id,
  input  [1:0]  auto_out_b_bits_resp,
  input  [3:0]  auto_out_b_bits_echo_tl_state_size,
  input  [6:0]  auto_out_b_bits_echo_tl_state_source,
  input         auto_out_ar_ready,
                auto_out_r_valid,
  input  [6:0]  auto_out_r_bits_id,
  input  [31:0] auto_out_r_bits_data,
  input  [1:0]  auto_out_r_bits_resp,
  input  [3:0]  auto_out_r_bits_echo_tl_state_size,
  input  [6:0]  auto_out_r_bits_echo_tl_state_source,
  input         auto_out_r_bits_last,
  output        auto_in_a_ready,
                auto_in_d_valid,
  output [2:0]  auto_in_d_bits_opcode,
                auto_in_d_bits_size,
  output [6:0]  auto_in_d_bits_source,
  output        auto_in_d_bits_denied,
  output [31:0] auto_in_d_bits_data,
  output        auto_in_d_bits_corrupt,
                auto_out_aw_valid,
  output [6:0]  auto_out_aw_bits_id,
  output [31:0] auto_out_aw_bits_addr,
  output [7:0]  auto_out_aw_bits_len,
  output [2:0]  auto_out_aw_bits_size,
  output [1:0]  auto_out_aw_bits_burst,
  output        auto_out_aw_bits_lock,
  output [3:0]  auto_out_aw_bits_cache,
  output [2:0]  auto_out_aw_bits_prot,
  output [3:0]  auto_out_aw_bits_qos,
                auto_out_aw_bits_echo_tl_state_size,
  output [6:0]  auto_out_aw_bits_echo_tl_state_source,
  output        auto_out_w_valid,
  output [31:0] auto_out_w_bits_data,
  output [3:0]  auto_out_w_bits_strb,
  output        auto_out_w_bits_last,
                auto_out_b_ready,
                auto_out_ar_valid,
  output [6:0]  auto_out_ar_bits_id,
  output [31:0] auto_out_ar_bits_addr,
  output [7:0]  auto_out_ar_bits_len,
  output [2:0]  auto_out_ar_bits_size,
  output [1:0]  auto_out_ar_bits_burst,
  output        auto_out_ar_bits_lock,
  output [3:0]  auto_out_ar_bits_cache,
  output [2:0]  auto_out_ar_bits_prot,
  output [3:0]  auto_out_ar_bits_qos,
                auto_out_ar_bits_echo_tl_state_size,
  output [6:0]  auto_out_ar_bits_echo_tl_state_source,
  output        auto_out_r_ready
);

  reg               count_128;	// @[ToAXI4.scala:257:28]
  reg               count_127;	// @[ToAXI4.scala:257:28]
  reg               count_126;	// @[ToAXI4.scala:257:28]
  reg               count_125;	// @[ToAXI4.scala:257:28]
  reg               count_124;	// @[ToAXI4.scala:257:28]
  reg               count_123;	// @[ToAXI4.scala:257:28]
  reg               count_122;	// @[ToAXI4.scala:257:28]
  reg               count_121;	// @[ToAXI4.scala:257:28]
  reg               count_120;	// @[ToAXI4.scala:257:28]
  reg               count_119;	// @[ToAXI4.scala:257:28]
  reg               count_118;	// @[ToAXI4.scala:257:28]
  reg               count_117;	// @[ToAXI4.scala:257:28]
  reg               count_116;	// @[ToAXI4.scala:257:28]
  reg               count_115;	// @[ToAXI4.scala:257:28]
  reg               count_114;	// @[ToAXI4.scala:257:28]
  reg               count_113;	// @[ToAXI4.scala:257:28]
  reg               count_112;	// @[ToAXI4.scala:257:28]
  reg               count_111;	// @[ToAXI4.scala:257:28]
  reg               count_110;	// @[ToAXI4.scala:257:28]
  reg               count_109;	// @[ToAXI4.scala:257:28]
  reg               count_108;	// @[ToAXI4.scala:257:28]
  reg               count_107;	// @[ToAXI4.scala:257:28]
  reg               count_106;	// @[ToAXI4.scala:257:28]
  reg               count_105;	// @[ToAXI4.scala:257:28]
  reg               count_104;	// @[ToAXI4.scala:257:28]
  reg               count_103;	// @[ToAXI4.scala:257:28]
  reg               count_102;	// @[ToAXI4.scala:257:28]
  reg               count_101;	// @[ToAXI4.scala:257:28]
  reg               count_100;	// @[ToAXI4.scala:257:28]
  reg               count_99;	// @[ToAXI4.scala:257:28]
  reg               count_98;	// @[ToAXI4.scala:257:28]
  reg               count_97;	// @[ToAXI4.scala:257:28]
  reg               count_96;	// @[ToAXI4.scala:257:28]
  reg               count_95;	// @[ToAXI4.scala:257:28]
  reg               count_94;	// @[ToAXI4.scala:257:28]
  reg               count_93;	// @[ToAXI4.scala:257:28]
  reg               count_92;	// @[ToAXI4.scala:257:28]
  reg               count_91;	// @[ToAXI4.scala:257:28]
  reg               count_90;	// @[ToAXI4.scala:257:28]
  reg               count_89;	// @[ToAXI4.scala:257:28]
  reg               count_88;	// @[ToAXI4.scala:257:28]
  reg               count_87;	// @[ToAXI4.scala:257:28]
  reg               count_86;	// @[ToAXI4.scala:257:28]
  reg               count_85;	// @[ToAXI4.scala:257:28]
  reg               count_84;	// @[ToAXI4.scala:257:28]
  reg               count_83;	// @[ToAXI4.scala:257:28]
  reg               count_82;	// @[ToAXI4.scala:257:28]
  reg               count_81;	// @[ToAXI4.scala:257:28]
  reg               count_80;	// @[ToAXI4.scala:257:28]
  reg               count_79;	// @[ToAXI4.scala:257:28]
  reg               count_78;	// @[ToAXI4.scala:257:28]
  reg               count_77;	// @[ToAXI4.scala:257:28]
  reg               count_76;	// @[ToAXI4.scala:257:28]
  reg               count_75;	// @[ToAXI4.scala:257:28]
  reg               count_74;	// @[ToAXI4.scala:257:28]
  reg               count_73;	// @[ToAXI4.scala:257:28]
  reg               count_72;	// @[ToAXI4.scala:257:28]
  reg               count_71;	// @[ToAXI4.scala:257:28]
  reg               count_70;	// @[ToAXI4.scala:257:28]
  reg               count_69;	// @[ToAXI4.scala:257:28]
  reg               count_68;	// @[ToAXI4.scala:257:28]
  reg               count_67;	// @[ToAXI4.scala:257:28]
  reg               count_66;	// @[ToAXI4.scala:257:28]
  reg               count_65;	// @[ToAXI4.scala:257:28]
  reg               count_64;	// @[ToAXI4.scala:257:28]
  reg               count_63;	// @[ToAXI4.scala:257:28]
  reg               count_62;	// @[ToAXI4.scala:257:28]
  reg               count_61;	// @[ToAXI4.scala:257:28]
  reg               count_60;	// @[ToAXI4.scala:257:28]
  reg               count_59;	// @[ToAXI4.scala:257:28]
  reg               count_58;	// @[ToAXI4.scala:257:28]
  reg               count_57;	// @[ToAXI4.scala:257:28]
  reg               count_56;	// @[ToAXI4.scala:257:28]
  reg               count_55;	// @[ToAXI4.scala:257:28]
  reg               count_54;	// @[ToAXI4.scala:257:28]
  reg               count_53;	// @[ToAXI4.scala:257:28]
  reg               count_52;	// @[ToAXI4.scala:257:28]
  reg               count_51;	// @[ToAXI4.scala:257:28]
  reg               count_50;	// @[ToAXI4.scala:257:28]
  reg               count_49;	// @[ToAXI4.scala:257:28]
  reg               count_48;	// @[ToAXI4.scala:257:28]
  reg               count_47;	// @[ToAXI4.scala:257:28]
  reg               count_46;	// @[ToAXI4.scala:257:28]
  reg               count_45;	// @[ToAXI4.scala:257:28]
  reg               count_44;	// @[ToAXI4.scala:257:28]
  reg               count_43;	// @[ToAXI4.scala:257:28]
  reg               count_42;	// @[ToAXI4.scala:257:28]
  reg               count_41;	// @[ToAXI4.scala:257:28]
  reg               count_40;	// @[ToAXI4.scala:257:28]
  reg               count_39;	// @[ToAXI4.scala:257:28]
  reg               count_38;	// @[ToAXI4.scala:257:28]
  reg               count_37;	// @[ToAXI4.scala:257:28]
  reg               count_36;	// @[ToAXI4.scala:257:28]
  reg               count_35;	// @[ToAXI4.scala:257:28]
  reg               count_34;	// @[ToAXI4.scala:257:28]
  reg               count_33;	// @[ToAXI4.scala:257:28]
  reg               count_32;	// @[ToAXI4.scala:257:28]
  reg               count_31;	// @[ToAXI4.scala:257:28]
  reg               count_30;	// @[ToAXI4.scala:257:28]
  reg               count_29;	// @[ToAXI4.scala:257:28]
  reg               count_28;	// @[ToAXI4.scala:257:28]
  reg               count_27;	// @[ToAXI4.scala:257:28]
  reg               count_26;	// @[ToAXI4.scala:257:28]
  reg               count_25;	// @[ToAXI4.scala:257:28]
  reg               count_24;	// @[ToAXI4.scala:257:28]
  reg               count_23;	// @[ToAXI4.scala:257:28]
  reg               count_22;	// @[ToAXI4.scala:257:28]
  reg               count_21;	// @[ToAXI4.scala:257:28]
  reg               count_20;	// @[ToAXI4.scala:257:28]
  reg               count_19;	// @[ToAXI4.scala:257:28]
  reg               count_18;	// @[ToAXI4.scala:257:28]
  reg               count_17;	// @[ToAXI4.scala:257:28]
  reg               count_16;	// @[ToAXI4.scala:257:28]
  reg               count_15;	// @[ToAXI4.scala:257:28]
  reg               count_14;	// @[ToAXI4.scala:257:28]
  reg               count_13;	// @[ToAXI4.scala:257:28]
  reg               count_12;	// @[ToAXI4.scala:257:28]
  reg               count_11;	// @[ToAXI4.scala:257:28]
  reg               count_10;	// @[ToAXI4.scala:257:28]
  reg               count_9;	// @[ToAXI4.scala:257:28]
  reg               count_8;	// @[ToAXI4.scala:257:28]
  reg               count_7;	// @[ToAXI4.scala:257:28]
  reg               count_6;	// @[ToAXI4.scala:257:28]
  reg               count_5;	// @[ToAXI4.scala:257:28]
  reg               count_4;	// @[ToAXI4.scala:257:28]
  reg               count_3;	// @[ToAXI4.scala:257:28]
  reg               count_2;	// @[ToAXI4.scala:257:28]
  reg               count_1;	// @[ToAXI4.scala:257:28]
  wire              _queue_arw_deq_io_enq_ready;	// @[Decoupled.scala:375:21]
  wire              _queue_arw_deq_io_deq_valid;	// @[Decoupled.scala:375:21]
  wire [6:0]        _queue_arw_deq_io_deq_bits_id;	// @[Decoupled.scala:375:21]
  wire [31:0]       _queue_arw_deq_io_deq_bits_addr;	// @[Decoupled.scala:375:21]
  wire [7:0]        _queue_arw_deq_io_deq_bits_len;	// @[Decoupled.scala:375:21]
  wire [2:0]        _queue_arw_deq_io_deq_bits_size;	// @[Decoupled.scala:375:21]
  wire [1:0]        _queue_arw_deq_io_deq_bits_burst;	// @[Decoupled.scala:375:21]
  wire              _queue_arw_deq_io_deq_bits_lock;	// @[Decoupled.scala:375:21]
  wire [3:0]        _queue_arw_deq_io_deq_bits_cache;	// @[Decoupled.scala:375:21]
  wire [2:0]        _queue_arw_deq_io_deq_bits_prot;	// @[Decoupled.scala:375:21]
  wire [3:0]        _queue_arw_deq_io_deq_bits_qos;	// @[Decoupled.scala:375:21]
  wire [3:0]        _queue_arw_deq_io_deq_bits_echo_tl_state_size;	// @[Decoupled.scala:375:21]
  wire [6:0]        _queue_arw_deq_io_deq_bits_echo_tl_state_source;	// @[Decoupled.scala:375:21]
  wire              _queue_arw_deq_io_deq_bits_wen;	// @[Decoupled.scala:375:21]
  wire              _deq_io_enq_ready;	// @[Decoupled.scala:375:21]
  wire [127:0][6:0] _GEN = '{7'h7F, 7'h7E, 7'h7D, 7'h7C, 7'h7B, 7'h7A, 7'h79, 7'h78, 7'h77, 7'h76, 7'h75, 7'h74, 7'h73, 7'h72, 7'h71, 7'h70, 7'h6F, 7'h6E, 7'h6D, 7'h6C, 7'h6B, 7'h6A, 7'h69, 7'h68, 7'h67, 7'h66, 7'h65, 7'h64, 7'h63, 7'h62, 7'h61, 7'h60, 7'h5F, 7'h5E, 7'h5D, 7'h5C, 7'h5B, 7'h5A, 7'h59, 7'h58, 7'h57, 7'h56, 7'h55, 7'h54, 7'h53, 7'h52, 7'h51, 7'h50, 7'h4F, 7'h4E, 7'h4D, 7'h4C, 7'h4B, 7'h4A, 7'h49, 7'h48, 7'h47, 7'h46, 7'h45, 7'h44, 7'h43, 7'h42, 7'h41, 7'h40, 7'h3F, 7'h3E, 7'h3D, 7'h3C, 7'h3B, 7'h3A, 7'h39, 7'h38, 7'h37, 7'h36, 7'h35, 7'h34, 7'h33, 7'h32, 7'h31, 7'h30, 7'h2F, 7'h2E, 7'h2D, 7'h2C, 7'h2B, 7'h2A, 7'h29, 7'h28, 7'h27, 7'h26, 7'h25, 7'h24, 7'h23, 7'h22, 7'h21, 7'h20, 7'h1F, 7'h1E, 7'h1D, 7'h1C, 7'h1B, 7'h1A, 7'h19, 7'h18, 7'h17, 7'h16, 7'h15, 7'h14, 7'h13, 7'h12, 7'h11, 7'h10, 7'hF, 7'hE, 7'hD, 7'hC, 7'hB, 7'hA, 7'h9, 7'h8, 7'h7, 7'h6, 7'h5, 7'h4, 7'h3, 7'h2, 7'h1, 7'h0};	// @[ToAXI4.scala:169:17]
  wire [12:0]       _beats1_decode_T_1 = 13'h3F << auto_in_a_bits_size;	// @[package.scala:235:71]
  reg  [3:0]        counter;	// @[Edges.scala:229:27]
  wire              a_first = counter == 4'h0;	// @[Edges.scala:229:27, :231:25]
  wire              out_w_bits_last = counter == 4'h1 | (auto_in_a_bits_opcode[2] ? 4'h0 : ~(_beats1_decode_T_1[5:2])) == 4'h0;	// @[Edges.scala:92:37, :221:14, :229:27, :232:{25,33,43}, package.scala:235:{46,71,76}]
  reg               doneAW;	// @[ToAXI4.scala:164:30]
  wire [6:0]        out_arw_bits_id = _GEN[auto_in_a_bits_source];	// @[ToAXI4.scala:169:17]
  wire [16:0]       _out_arw_bits_len_T_1 = 17'h3FF << auto_in_a_bits_size;	// @[package.scala:235:71]
  wire [127:0]      _GEN_0 = {{count_128}, {count_127}, {count_126}, {count_125}, {count_124}, {count_123}, {count_122}, {count_121}, {count_120}, {count_119}, {count_118}, {count_117}, {count_116}, {count_115}, {count_114}, {count_113}, {count_112}, {count_111}, {count_110}, {count_109}, {count_108}, {count_107}, {count_106}, {count_105}, {count_104}, {count_103}, {count_102}, {count_101}, {count_100}, {count_99}, {count_98}, {count_97}, {count_96}, {count_95}, {count_94}, {count_93}, {count_92}, {count_91}, {count_90}, {count_89}, {count_88}, {count_87}, {count_86}, {count_85}, {count_84}, {count_83}, {count_82}, {count_81}, {count_80}, {count_79}, {count_78}, {count_77}, {count_76}, {count_75}, {count_74}, {count_73}, {count_72}, {count_71}, {count_70}, {count_69}, {count_68}, {count_67}, {count_66}, {count_65}, {count_64}, {count_63}, {count_62}, {count_61}, {count_60}, {count_59}, {count_58}, {count_57}, {count_56}, {count_55}, {count_54}, {count_53}, {count_52}, {count_51}, {count_50}, {count_49}, {count_48}, {count_47}, {count_46}, {count_45}, {count_44}, {count_43}, {count_42}, {count_41}, {count_40}, {count_39}, {count_38}, {count_37}, {count_36}, {count_35}, {count_34}, {count_33}, {count_32}, {count_31}, {count_30}, {count_29}, {count_28}, {count_27}, {count_26}, {count_25}, {count_24}, {count_23}, {count_22}, {count_21}, {count_20}, {count_19}, {count_18}, {count_17}, {count_16}, {count_15}, {count_14}, {count_13}, {count_12}, {count_11}, {count_10}, {count_9}, {count_8}, {count_7}, {count_6}, {count_5}, {count_4}, {count_3}, {count_2}, {count_1}};	// @[ToAXI4.scala:198:49, :257:28]
  wire              stall = _GEN_0[auto_in_a_bits_source] & a_first;	// @[Edges.scala:231:25, ToAXI4.scala:198:49]
  wire              _out_w_valid_T_3 = doneAW | _queue_arw_deq_io_enq_ready;	// @[Decoupled.scala:375:21, ToAXI4.scala:164:30, :199:52]
  wire              bundleIn_0_a_ready = ~stall & (auto_in_a_bits_opcode[2] ? _queue_arw_deq_io_enq_ready : _out_w_valid_T_3 & _deq_io_enq_ready);	// @[Decoupled.scala:375:21, Edges.scala:92:37, ToAXI4.scala:198:49, :199:{21,28,34,52,70}]
  wire              out_arw_valid = ~stall & auto_in_a_valid & (auto_in_a_bits_opcode[2] | ~doneAW & _deq_io_enq_ready);	// @[Decoupled.scala:375:21, Edges.scala:92:37, ToAXI4.scala:164:30, :198:49, :199:21, :200:{45,51,61,69}]
  reg               r_holds_d;	// @[ToAXI4.scala:209:30]
  reg  [2:0]        b_delay;	// @[ToAXI4.scala:212:24]
  wire              r_wins = auto_out_r_valid & b_delay != 3'h7 | r_holds_d;	// @[ToAXI4.scala:209:30, :212:24, :218:{33,44,53}]
  wire              x1_r_ready = auto_in_d_ready & r_wins;	// @[ToAXI4.scala:218:53, :220:33]
  wire              x1_b_ready = auto_in_d_ready & ~r_wins;	// @[ToAXI4.scala:218:53, :221:{33,36}]
  wire              bundleIn_0_d_valid = r_wins ? auto_out_r_valid : auto_out_b_valid;	// @[ToAXI4.scala:218:53, :222:24]
  reg               r_first;	// @[ToAXI4.scala:227:28]
  reg               r_denied_r;	// @[Reg.scala:19:16]
  wire              r_d_denied = r_first ? (&auto_out_r_bits_resp) : r_denied_r;	// @[Reg.scala:19:16, ToAXI4.scala:227:28, :229:39, package.scala:80:42]
  wire [6:0]        d_sel_shiftAmount = r_wins ? auto_out_r_bits_id : auto_out_b_bits_id;	// @[ToAXI4.scala:218:53, :246:31]
  wire              d_last = ~r_wins | auto_out_r_bits_last;	// @[ToAXI4.scala:218:53, :247:23]
  wire              _inc_T_127 = _queue_arw_deq_io_enq_ready & out_arw_valid;	// @[Decoupled.scala:51:35, :375:21, ToAXI4.scala:200:45]
  wire              inc = out_arw_bits_id == 7'h0 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              _dec_T_255 = auto_in_d_ready & bundleIn_0_d_valid;	// @[Decoupled.scala:51:35, ToAXI4.scala:222:24]
  wire              dec = d_sel_shiftAmount == 7'h0 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_1 = out_arw_bits_id == 7'h1 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_1 = d_sel_shiftAmount == 7'h1 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_2 = out_arw_bits_id == 7'h2 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_2 = d_sel_shiftAmount == 7'h2 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_3 = out_arw_bits_id == 7'h3 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_3 = d_sel_shiftAmount == 7'h3 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_4 = out_arw_bits_id == 7'h4 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_4 = d_sel_shiftAmount == 7'h4 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_5 = out_arw_bits_id == 7'h5 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_5 = d_sel_shiftAmount == 7'h5 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_6 = out_arw_bits_id == 7'h6 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_6 = d_sel_shiftAmount == 7'h6 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_7 = out_arw_bits_id == 7'h7 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_7 = d_sel_shiftAmount == 7'h7 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_8 = out_arw_bits_id == 7'h8 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_8 = d_sel_shiftAmount == 7'h8 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_9 = out_arw_bits_id == 7'h9 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_9 = d_sel_shiftAmount == 7'h9 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_10 = out_arw_bits_id == 7'hA & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_10 = d_sel_shiftAmount == 7'hA & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_11 = out_arw_bits_id == 7'hB & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_11 = d_sel_shiftAmount == 7'hB & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_12 = out_arw_bits_id == 7'hC & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_12 = d_sel_shiftAmount == 7'hC & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_13 = out_arw_bits_id == 7'hD & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_13 = d_sel_shiftAmount == 7'hD & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_14 = out_arw_bits_id == 7'hE & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_14 = d_sel_shiftAmount == 7'hE & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_15 = out_arw_bits_id == 7'hF & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_15 = d_sel_shiftAmount == 7'hF & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_16 = out_arw_bits_id == 7'h10 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_16 = d_sel_shiftAmount == 7'h10 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_17 = out_arw_bits_id == 7'h11 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_17 = d_sel_shiftAmount == 7'h11 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_18 = out_arw_bits_id == 7'h12 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_18 = d_sel_shiftAmount == 7'h12 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_19 = out_arw_bits_id == 7'h13 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_19 = d_sel_shiftAmount == 7'h13 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_20 = out_arw_bits_id == 7'h14 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_20 = d_sel_shiftAmount == 7'h14 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_21 = out_arw_bits_id == 7'h15 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_21 = d_sel_shiftAmount == 7'h15 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_22 = out_arw_bits_id == 7'h16 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_22 = d_sel_shiftAmount == 7'h16 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_23 = out_arw_bits_id == 7'h17 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_23 = d_sel_shiftAmount == 7'h17 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_24 = out_arw_bits_id == 7'h18 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_24 = d_sel_shiftAmount == 7'h18 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_25 = out_arw_bits_id == 7'h19 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_25 = d_sel_shiftAmount == 7'h19 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_26 = out_arw_bits_id == 7'h1A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_26 = d_sel_shiftAmount == 7'h1A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_27 = out_arw_bits_id == 7'h1B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_27 = d_sel_shiftAmount == 7'h1B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_28 = out_arw_bits_id == 7'h1C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_28 = d_sel_shiftAmount == 7'h1C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_29 = out_arw_bits_id == 7'h1D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_29 = d_sel_shiftAmount == 7'h1D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_30 = out_arw_bits_id == 7'h1E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_30 = d_sel_shiftAmount == 7'h1E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_31 = out_arw_bits_id == 7'h1F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_31 = d_sel_shiftAmount == 7'h1F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_32 = out_arw_bits_id == 7'h20 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_32 = d_sel_shiftAmount == 7'h20 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_33 = out_arw_bits_id == 7'h21 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_33 = d_sel_shiftAmount == 7'h21 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_34 = out_arw_bits_id == 7'h22 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_34 = d_sel_shiftAmount == 7'h22 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_35 = out_arw_bits_id == 7'h23 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_35 = d_sel_shiftAmount == 7'h23 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_36 = out_arw_bits_id == 7'h24 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_36 = d_sel_shiftAmount == 7'h24 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_37 = out_arw_bits_id == 7'h25 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_37 = d_sel_shiftAmount == 7'h25 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_38 = out_arw_bits_id == 7'h26 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_38 = d_sel_shiftAmount == 7'h26 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_39 = out_arw_bits_id == 7'h27 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_39 = d_sel_shiftAmount == 7'h27 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_40 = out_arw_bits_id == 7'h28 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_40 = d_sel_shiftAmount == 7'h28 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_41 = out_arw_bits_id == 7'h29 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_41 = d_sel_shiftAmount == 7'h29 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_42 = out_arw_bits_id == 7'h2A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_42 = d_sel_shiftAmount == 7'h2A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_43 = out_arw_bits_id == 7'h2B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_43 = d_sel_shiftAmount == 7'h2B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_44 = out_arw_bits_id == 7'h2C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_44 = d_sel_shiftAmount == 7'h2C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_45 = out_arw_bits_id == 7'h2D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_45 = d_sel_shiftAmount == 7'h2D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_46 = out_arw_bits_id == 7'h2E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_46 = d_sel_shiftAmount == 7'h2E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_47 = out_arw_bits_id == 7'h2F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_47 = d_sel_shiftAmount == 7'h2F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_48 = out_arw_bits_id == 7'h30 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_48 = d_sel_shiftAmount == 7'h30 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_49 = out_arw_bits_id == 7'h31 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_49 = d_sel_shiftAmount == 7'h31 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_50 = out_arw_bits_id == 7'h32 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_50 = d_sel_shiftAmount == 7'h32 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_51 = out_arw_bits_id == 7'h33 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_51 = d_sel_shiftAmount == 7'h33 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_52 = out_arw_bits_id == 7'h34 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_52 = d_sel_shiftAmount == 7'h34 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_53 = out_arw_bits_id == 7'h35 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_53 = d_sel_shiftAmount == 7'h35 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_54 = out_arw_bits_id == 7'h36 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_54 = d_sel_shiftAmount == 7'h36 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_55 = out_arw_bits_id == 7'h37 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_55 = d_sel_shiftAmount == 7'h37 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_56 = out_arw_bits_id == 7'h38 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_56 = d_sel_shiftAmount == 7'h38 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_57 = out_arw_bits_id == 7'h39 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_57 = d_sel_shiftAmount == 7'h39 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_58 = out_arw_bits_id == 7'h3A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_58 = d_sel_shiftAmount == 7'h3A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_59 = out_arw_bits_id == 7'h3B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_59 = d_sel_shiftAmount == 7'h3B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_60 = out_arw_bits_id == 7'h3C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_60 = d_sel_shiftAmount == 7'h3C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_61 = out_arw_bits_id == 7'h3D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_61 = d_sel_shiftAmount == 7'h3D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_62 = out_arw_bits_id == 7'h3E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_62 = d_sel_shiftAmount == 7'h3E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_63 = out_arw_bits_id == 7'h3F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_63 = d_sel_shiftAmount == 7'h3F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_64 = out_arw_bits_id == 7'h40 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_64 = d_sel_shiftAmount == 7'h40 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_65 = out_arw_bits_id == 7'h41 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_65 = d_sel_shiftAmount == 7'h41 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_66 = out_arw_bits_id == 7'h42 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_66 = d_sel_shiftAmount == 7'h42 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_67 = out_arw_bits_id == 7'h43 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_67 = d_sel_shiftAmount == 7'h43 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_68 = out_arw_bits_id == 7'h44 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_68 = d_sel_shiftAmount == 7'h44 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_69 = out_arw_bits_id == 7'h45 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_69 = d_sel_shiftAmount == 7'h45 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_70 = out_arw_bits_id == 7'h46 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_70 = d_sel_shiftAmount == 7'h46 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_71 = out_arw_bits_id == 7'h47 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_71 = d_sel_shiftAmount == 7'h47 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_72 = out_arw_bits_id == 7'h48 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_72 = d_sel_shiftAmount == 7'h48 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_73 = out_arw_bits_id == 7'h49 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_73 = d_sel_shiftAmount == 7'h49 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_74 = out_arw_bits_id == 7'h4A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_74 = d_sel_shiftAmount == 7'h4A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_75 = out_arw_bits_id == 7'h4B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_75 = d_sel_shiftAmount == 7'h4B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_76 = out_arw_bits_id == 7'h4C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_76 = d_sel_shiftAmount == 7'h4C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_77 = out_arw_bits_id == 7'h4D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_77 = d_sel_shiftAmount == 7'h4D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_78 = out_arw_bits_id == 7'h4E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_78 = d_sel_shiftAmount == 7'h4E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_79 = out_arw_bits_id == 7'h4F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_79 = d_sel_shiftAmount == 7'h4F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_80 = out_arw_bits_id == 7'h50 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_80 = d_sel_shiftAmount == 7'h50 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_81 = out_arw_bits_id == 7'h51 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_81 = d_sel_shiftAmount == 7'h51 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_82 = out_arw_bits_id == 7'h52 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_82 = d_sel_shiftAmount == 7'h52 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_83 = out_arw_bits_id == 7'h53 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_83 = d_sel_shiftAmount == 7'h53 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_84 = out_arw_bits_id == 7'h54 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_84 = d_sel_shiftAmount == 7'h54 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_85 = out_arw_bits_id == 7'h55 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_85 = d_sel_shiftAmount == 7'h55 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_86 = out_arw_bits_id == 7'h56 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_86 = d_sel_shiftAmount == 7'h56 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_87 = out_arw_bits_id == 7'h57 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_87 = d_sel_shiftAmount == 7'h57 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_88 = out_arw_bits_id == 7'h58 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_88 = d_sel_shiftAmount == 7'h58 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_89 = out_arw_bits_id == 7'h59 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_89 = d_sel_shiftAmount == 7'h59 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_90 = out_arw_bits_id == 7'h5A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_90 = d_sel_shiftAmount == 7'h5A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_91 = out_arw_bits_id == 7'h5B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_91 = d_sel_shiftAmount == 7'h5B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_92 = out_arw_bits_id == 7'h5C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_92 = d_sel_shiftAmount == 7'h5C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_93 = out_arw_bits_id == 7'h5D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_93 = d_sel_shiftAmount == 7'h5D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_94 = out_arw_bits_id == 7'h5E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_94 = d_sel_shiftAmount == 7'h5E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_95 = out_arw_bits_id == 7'h5F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_95 = d_sel_shiftAmount == 7'h5F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_96 = out_arw_bits_id == 7'h60 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_96 = d_sel_shiftAmount == 7'h60 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_97 = out_arw_bits_id == 7'h61 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_97 = d_sel_shiftAmount == 7'h61 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_98 = out_arw_bits_id == 7'h62 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_98 = d_sel_shiftAmount == 7'h62 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_99 = out_arw_bits_id == 7'h63 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_99 = d_sel_shiftAmount == 7'h63 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_100 = out_arw_bits_id == 7'h64 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_100 = d_sel_shiftAmount == 7'h64 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_101 = out_arw_bits_id == 7'h65 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_101 = d_sel_shiftAmount == 7'h65 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_102 = out_arw_bits_id == 7'h66 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_102 = d_sel_shiftAmount == 7'h66 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_103 = out_arw_bits_id == 7'h67 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_103 = d_sel_shiftAmount == 7'h67 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_104 = out_arw_bits_id == 7'h68 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_104 = d_sel_shiftAmount == 7'h68 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_105 = out_arw_bits_id == 7'h69 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_105 = d_sel_shiftAmount == 7'h69 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_106 = out_arw_bits_id == 7'h6A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_106 = d_sel_shiftAmount == 7'h6A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_107 = out_arw_bits_id == 7'h6B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_107 = d_sel_shiftAmount == 7'h6B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_108 = out_arw_bits_id == 7'h6C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_108 = d_sel_shiftAmount == 7'h6C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_109 = out_arw_bits_id == 7'h6D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_109 = d_sel_shiftAmount == 7'h6D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_110 = out_arw_bits_id == 7'h6E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_110 = d_sel_shiftAmount == 7'h6E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_111 = out_arw_bits_id == 7'h6F & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_111 = d_sel_shiftAmount == 7'h6F & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_112 = out_arw_bits_id == 7'h70 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_112 = d_sel_shiftAmount == 7'h70 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_113 = out_arw_bits_id == 7'h71 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_113 = d_sel_shiftAmount == 7'h71 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_114 = out_arw_bits_id == 7'h72 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_114 = d_sel_shiftAmount == 7'h72 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_115 = out_arw_bits_id == 7'h73 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_115 = d_sel_shiftAmount == 7'h73 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_116 = out_arw_bits_id == 7'h74 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_116 = d_sel_shiftAmount == 7'h74 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_117 = out_arw_bits_id == 7'h75 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_117 = d_sel_shiftAmount == 7'h75 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_118 = out_arw_bits_id == 7'h76 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_118 = d_sel_shiftAmount == 7'h76 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_119 = out_arw_bits_id == 7'h77 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_119 = d_sel_shiftAmount == 7'h77 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_120 = out_arw_bits_id == 7'h78 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_120 = d_sel_shiftAmount == 7'h78 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_121 = out_arw_bits_id == 7'h79 & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_121 = d_sel_shiftAmount == 7'h79 & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_122 = out_arw_bits_id == 7'h7A & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_122 = d_sel_shiftAmount == 7'h7A & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_123 = out_arw_bits_id == 7'h7B & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_123 = d_sel_shiftAmount == 7'h7B & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_124 = out_arw_bits_id == 7'h7C & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_124 = d_sel_shiftAmount == 7'h7C & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_125 = out_arw_bits_id == 7'h7D & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_125 = d_sel_shiftAmount == 7'h7D & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_126 = out_arw_bits_id == 7'h7E & _inc_T_127;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_126 = d_sel_shiftAmount == 7'h7E & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, OneHot.scala:64:12, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  wire              inc_127 = (&out_arw_bits_id) & _inc_T_127;	// @[Decoupled.scala:51:35, ToAXI4.scala:169:17, :245:58, :261:22]
  wire              dec_127 = (&d_sel_shiftAmount) & d_last & _dec_T_255;	// @[Decoupled.scala:51:35, ToAXI4.scala:246:{31,93}, :247:23, :262:32]
  always @(posedge clock) begin
    if (reset) begin
      counter <= 4'h0;	// @[Edges.scala:229:27]
      doneAW <= 1'h0;	// @[ToAXI4.scala:110:76, :164:30]
      r_holds_d <= 1'h0;	// @[ToAXI4.scala:110:76, :209:30]
      r_first <= 1'h1;	// @[ToAXI4.scala:119:39, :227:28]
      count_1 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_2 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_3 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_4 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_5 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_6 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_7 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_8 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_9 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_10 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_11 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_12 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_13 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_14 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_15 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_16 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_17 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_18 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_19 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_20 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_21 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_22 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_23 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_24 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_25 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_26 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_27 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_28 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_29 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_30 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_31 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_32 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_33 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_34 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_35 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_36 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_37 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_38 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_39 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_40 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_41 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_42 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_43 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_44 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_45 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_46 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_47 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_48 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_49 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_50 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_51 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_52 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_53 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_54 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_55 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_56 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_57 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_58 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_59 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_60 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_61 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_62 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_63 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_64 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_65 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_66 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_67 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_68 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_69 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_70 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_71 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_72 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_73 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_74 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_75 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_76 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_77 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_78 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_79 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_80 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_81 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_82 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_83 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_84 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_85 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_86 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_87 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_88 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_89 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_90 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_91 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_92 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_93 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_94 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_95 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_96 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_97 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_98 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_99 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_100 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_101 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_102 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_103 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_104 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_105 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_106 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_107 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_108 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_109 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_110 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_111 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_112 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_113 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_114 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_115 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_116 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_117 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_118 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_119 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_120 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_121 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_122 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_123 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_124 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_125 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_126 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_127 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
      count_128 <= 1'h0;	// @[ToAXI4.scala:110:76, :257:28]
    end
    else begin
      if (bundleIn_0_a_ready & auto_in_a_valid) begin	// @[Decoupled.scala:51:35, ToAXI4.scala:199:28]
        if (a_first) begin	// @[Edges.scala:231:25]
          if (auto_in_a_bits_opcode[2])	// @[Edges.scala:92:37]
            counter <= 4'h0;	// @[Edges.scala:229:27]
          else	// @[Edges.scala:92:37]
            counter <= ~(_beats1_decode_T_1[5:2]);	// @[Edges.scala:229:27, package.scala:235:{46,71,76}]
        end
        else	// @[Edges.scala:231:25]
          counter <= counter - 4'h1;	// @[Edges.scala:229:27, :230:28]
        doneAW <= ~out_w_bits_last;	// @[Edges.scala:232:33, ToAXI4.scala:164:30, :165:36]
      end
      if (x1_r_ready & auto_out_r_valid) begin	// @[Decoupled.scala:51:35, ToAXI4.scala:220:33]
        r_holds_d <= ~auto_out_r_bits_last;	// @[ToAXI4.scala:209:30, :210:40]
        r_first <= auto_out_r_bits_last;	// @[ToAXI4.scala:227:28]
      end
      count_1 <= count_1 + inc - dec;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_2 <= count_2 + inc_1 - dec_1;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_3 <= count_3 + inc_2 - dec_2;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_4 <= count_4 + inc_3 - dec_3;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_5 <= count_5 + inc_4 - dec_4;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_6 <= count_6 + inc_5 - dec_5;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_7 <= count_7 + inc_6 - dec_6;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_8 <= count_8 + inc_7 - dec_7;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_9 <= count_9 + inc_8 - dec_8;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_10 <= count_10 + inc_9 - dec_9;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_11 <= count_11 + inc_10 - dec_10;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_12 <= count_12 + inc_11 - dec_11;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_13 <= count_13 + inc_12 - dec_12;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_14 <= count_14 + inc_13 - dec_13;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_15 <= count_15 + inc_14 - dec_14;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_16 <= count_16 + inc_15 - dec_15;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_17 <= count_17 + inc_16 - dec_16;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_18 <= count_18 + inc_17 - dec_17;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_19 <= count_19 + inc_18 - dec_18;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_20 <= count_20 + inc_19 - dec_19;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_21 <= count_21 + inc_20 - dec_20;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_22 <= count_22 + inc_21 - dec_21;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_23 <= count_23 + inc_22 - dec_22;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_24 <= count_24 + inc_23 - dec_23;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_25 <= count_25 + inc_24 - dec_24;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_26 <= count_26 + inc_25 - dec_25;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_27 <= count_27 + inc_26 - dec_26;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_28 <= count_28 + inc_27 - dec_27;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_29 <= count_29 + inc_28 - dec_28;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_30 <= count_30 + inc_29 - dec_29;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_31 <= count_31 + inc_30 - dec_30;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_32 <= count_32 + inc_31 - dec_31;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_33 <= count_33 + inc_32 - dec_32;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_34 <= count_34 + inc_33 - dec_33;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_35 <= count_35 + inc_34 - dec_34;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_36 <= count_36 + inc_35 - dec_35;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_37 <= count_37 + inc_36 - dec_36;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_38 <= count_38 + inc_37 - dec_37;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_39 <= count_39 + inc_38 - dec_38;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_40 <= count_40 + inc_39 - dec_39;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_41 <= count_41 + inc_40 - dec_40;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_42 <= count_42 + inc_41 - dec_41;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_43 <= count_43 + inc_42 - dec_42;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_44 <= count_44 + inc_43 - dec_43;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_45 <= count_45 + inc_44 - dec_44;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_46 <= count_46 + inc_45 - dec_45;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_47 <= count_47 + inc_46 - dec_46;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_48 <= count_48 + inc_47 - dec_47;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_49 <= count_49 + inc_48 - dec_48;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_50 <= count_50 + inc_49 - dec_49;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_51 <= count_51 + inc_50 - dec_50;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_52 <= count_52 + inc_51 - dec_51;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_53 <= count_53 + inc_52 - dec_52;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_54 <= count_54 + inc_53 - dec_53;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_55 <= count_55 + inc_54 - dec_54;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_56 <= count_56 + inc_55 - dec_55;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_57 <= count_57 + inc_56 - dec_56;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_58 <= count_58 + inc_57 - dec_57;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_59 <= count_59 + inc_58 - dec_58;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_60 <= count_60 + inc_59 - dec_59;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_61 <= count_61 + inc_60 - dec_60;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_62 <= count_62 + inc_61 - dec_61;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_63 <= count_63 + inc_62 - dec_62;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_64 <= count_64 + inc_63 - dec_63;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_65 <= count_65 + inc_64 - dec_64;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_66 <= count_66 + inc_65 - dec_65;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_67 <= count_67 + inc_66 - dec_66;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_68 <= count_68 + inc_67 - dec_67;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_69 <= count_69 + inc_68 - dec_68;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_70 <= count_70 + inc_69 - dec_69;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_71 <= count_71 + inc_70 - dec_70;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_72 <= count_72 + inc_71 - dec_71;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_73 <= count_73 + inc_72 - dec_72;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_74 <= count_74 + inc_73 - dec_73;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_75 <= count_75 + inc_74 - dec_74;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_76 <= count_76 + inc_75 - dec_75;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_77 <= count_77 + inc_76 - dec_76;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_78 <= count_78 + inc_77 - dec_77;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_79 <= count_79 + inc_78 - dec_78;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_80 <= count_80 + inc_79 - dec_79;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_81 <= count_81 + inc_80 - dec_80;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_82 <= count_82 + inc_81 - dec_81;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_83 <= count_83 + inc_82 - dec_82;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_84 <= count_84 + inc_83 - dec_83;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_85 <= count_85 + inc_84 - dec_84;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_86 <= count_86 + inc_85 - dec_85;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_87 <= count_87 + inc_86 - dec_86;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_88 <= count_88 + inc_87 - dec_87;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_89 <= count_89 + inc_88 - dec_88;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_90 <= count_90 + inc_89 - dec_89;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_91 <= count_91 + inc_90 - dec_90;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_92 <= count_92 + inc_91 - dec_91;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_93 <= count_93 + inc_92 - dec_92;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_94 <= count_94 + inc_93 - dec_93;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_95 <= count_95 + inc_94 - dec_94;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_96 <= count_96 + inc_95 - dec_95;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_97 <= count_97 + inc_96 - dec_96;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_98 <= count_98 + inc_97 - dec_97;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_99 <= count_99 + inc_98 - dec_98;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_100 <= count_100 + inc_99 - dec_99;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_101 <= count_101 + inc_100 - dec_100;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_102 <= count_102 + inc_101 - dec_101;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_103 <= count_103 + inc_102 - dec_102;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_104 <= count_104 + inc_103 - dec_103;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_105 <= count_105 + inc_104 - dec_104;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_106 <= count_106 + inc_105 - dec_105;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_107 <= count_107 + inc_106 - dec_106;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_108 <= count_108 + inc_107 - dec_107;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_109 <= count_109 + inc_108 - dec_108;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_110 <= count_110 + inc_109 - dec_109;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_111 <= count_111 + inc_110 - dec_110;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_112 <= count_112 + inc_111 - dec_111;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_113 <= count_113 + inc_112 - dec_112;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_114 <= count_114 + inc_113 - dec_113;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_115 <= count_115 + inc_114 - dec_114;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_116 <= count_116 + inc_115 - dec_115;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_117 <= count_117 + inc_116 - dec_116;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_118 <= count_118 + inc_117 - dec_117;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_119 <= count_119 + inc_118 - dec_118;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_120 <= count_120 + inc_119 - dec_119;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_121 <= count_121 + inc_120 - dec_120;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_122 <= count_122 + inc_121 - dec_121;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_123 <= count_123 + inc_122 - dec_122;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_124 <= count_124 + inc_123 - dec_123;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_125 <= count_125 + inc_124 - dec_124;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_126 <= count_126 + inc_125 - dec_125;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_127 <= count_127 + inc_126 - dec_126;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
      count_128 <= count_128 + inc_127 - dec_127;	// @[ToAXI4.scala:257:28, :261:22, :262:32, :263:{24,37}]
    end
    if (auto_out_b_valid & ~x1_b_ready)	// @[ToAXI4.scala:213:{25,28}, :221:33]
      b_delay <= b_delay + 3'h1;	// @[Edges.scala:787:15, ToAXI4.scala:212:24, :214:28]
    else	// @[ToAXI4.scala:213:25]
      b_delay <= 3'h0;	// @[Bundles.scala:259:74, ToAXI4.scala:212:24]
    if (r_first)	// @[ToAXI4.scala:227:28]
      r_denied_r <= &auto_out_r_bits_resp;	// @[Reg.scala:19:16, ToAXI4.scala:229:39]
  end // always @(posedge)
  `ifndef SYNTHESIS
    always @(posedge clock) begin	// @[ToAXI4.scala:265:16]
      if (~reset & ~(~dec | count_1)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc | ~count_1)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_1 | count_2)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_1 | ~count_2)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_2 | count_3)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_2 | ~count_3)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_3 | count_4)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_3 | ~count_4)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_4 | count_5)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_4 | ~count_5)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_5 | count_6)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_5 | ~count_6)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_6 | count_7)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_6 | ~count_7)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_7 | count_8)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_7 | ~count_8)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_8 | count_9)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_8 | ~count_9)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_9 | count_10)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_9 | ~count_10)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_10 | count_11)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_10 | ~count_11)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_11 | count_12)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_11 | ~count_12)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_12 | count_13)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_12 | ~count_13)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_13 | count_14)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_13 | ~count_14)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_14 | count_15)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_14 | ~count_15)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_15 | count_16)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_15 | ~count_16)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_16 | count_17)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_16 | ~count_17)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_17 | count_18)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_17 | ~count_18)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_18 | count_19)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_18 | ~count_19)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_19 | count_20)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_19 | ~count_20)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_20 | count_21)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_20 | ~count_21)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_21 | count_22)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_21 | ~count_22)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_22 | count_23)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_22 | ~count_23)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_23 | count_24)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_23 | ~count_24)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_24 | count_25)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_24 | ~count_25)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_25 | count_26)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_25 | ~count_26)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_26 | count_27)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_26 | ~count_27)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_27 | count_28)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_27 | ~count_28)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_28 | count_29)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_28 | ~count_29)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_29 | count_30)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_29 | ~count_30)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_30 | count_31)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_30 | ~count_31)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_31 | count_32)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_31 | ~count_32)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_32 | count_33)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_32 | ~count_33)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_33 | count_34)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_33 | ~count_34)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_34 | count_35)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_34 | ~count_35)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_35 | count_36)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_35 | ~count_36)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_36 | count_37)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_36 | ~count_37)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_37 | count_38)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_37 | ~count_38)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_38 | count_39)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_38 | ~count_39)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_39 | count_40)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_39 | ~count_40)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_40 | count_41)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_40 | ~count_41)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_41 | count_42)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_41 | ~count_42)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_42 | count_43)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_42 | ~count_43)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_43 | count_44)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_43 | ~count_44)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_44 | count_45)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_44 | ~count_45)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_45 | count_46)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_45 | ~count_46)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_46 | count_47)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_46 | ~count_47)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_47 | count_48)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_47 | ~count_48)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_48 | count_49)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_48 | ~count_49)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_49 | count_50)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_49 | ~count_50)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_50 | count_51)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_50 | ~count_51)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_51 | count_52)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_51 | ~count_52)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_52 | count_53)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_52 | ~count_53)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_53 | count_54)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_53 | ~count_54)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_54 | count_55)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_54 | ~count_55)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_55 | count_56)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_55 | ~count_56)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_56 | count_57)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_56 | ~count_57)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_57 | count_58)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_57 | ~count_58)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_58 | count_59)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_58 | ~count_59)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_59 | count_60)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_59 | ~count_60)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_60 | count_61)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_60 | ~count_61)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_61 | count_62)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_61 | ~count_62)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_62 | count_63)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_62 | ~count_63)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_63 | count_64)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_63 | ~count_64)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_64 | count_65)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_64 | ~count_65)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_65 | count_66)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_65 | ~count_66)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_66 | count_67)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_66 | ~count_67)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_67 | count_68)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_67 | ~count_68)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_68 | count_69)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_68 | ~count_69)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_69 | count_70)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_69 | ~count_70)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_70 | count_71)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_70 | ~count_71)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_71 | count_72)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_71 | ~count_72)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_72 | count_73)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_72 | ~count_73)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_73 | count_74)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_73 | ~count_74)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_74 | count_75)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_74 | ~count_75)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_75 | count_76)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_75 | ~count_76)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_76 | count_77)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_76 | ~count_77)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_77 | count_78)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_77 | ~count_78)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_78 | count_79)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_78 | ~count_79)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_79 | count_80)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_79 | ~count_80)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_80 | count_81)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_80 | ~count_81)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_81 | count_82)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_81 | ~count_82)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_82 | count_83)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_82 | ~count_83)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_83 | count_84)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_83 | ~count_84)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_84 | count_85)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_84 | ~count_85)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_85 | count_86)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_85 | ~count_86)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_86 | count_87)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_86 | ~count_87)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_87 | count_88)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_87 | ~count_88)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_88 | count_89)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_88 | ~count_89)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_89 | count_90)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_89 | ~count_90)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_90 | count_91)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_90 | ~count_91)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_91 | count_92)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_91 | ~count_92)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_92 | count_93)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_92 | ~count_93)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_93 | count_94)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_93 | ~count_94)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_94 | count_95)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_94 | ~count_95)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_95 | count_96)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_95 | ~count_96)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_96 | count_97)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_96 | ~count_97)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_97 | count_98)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_97 | ~count_98)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_98 | count_99)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_98 | ~count_99)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_99 | count_100)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_99 | ~count_100)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_100 | count_101)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_100 | ~count_101)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_101 | count_102)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_101 | ~count_102)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_102 | count_103)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_102 | ~count_103)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_103 | count_104)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_103 | ~count_104)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_104 | count_105)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_104 | ~count_105)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_105 | count_106)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_105 | ~count_106)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_106 | count_107)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_106 | ~count_107)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_107 | count_108)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_107 | ~count_108)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_108 | count_109)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_108 | ~count_109)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_109 | count_110)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_109 | ~count_110)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_110 | count_111)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_110 | ~count_111)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_111 | count_112)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_111 | ~count_112)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_112 | count_113)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_112 | ~count_113)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_113 | count_114)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_113 | ~count_114)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_114 | count_115)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_114 | ~count_115)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_115 | count_116)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_115 | ~count_116)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_116 | count_117)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_116 | ~count_117)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_117 | count_118)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_117 | ~count_118)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_118 | count_119)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_118 | ~count_119)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_119 | count_120)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_119 | ~count_120)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_120 | count_121)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_120 | ~count_121)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_121 | count_122)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_121 | ~count_122)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_122 | count_123)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_122 | ~count_123)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_123 | count_124)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_123 | ~count_124)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_124 | count_125)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_124 | ~count_125)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_125 | count_126)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_125 | ~count_126)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_126 | count_127)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_126 | ~count_127)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
      if (~reset & ~(~dec_127 | count_128)) begin	// @[ToAXI4.scala:257:28, :262:32, :265:{16,17,22}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:265:16]
          $error("Assertion failed\n    at ToAXI4.scala:265 assert (!dec || count =/= 0.U)        // underflow\n");	// @[ToAXI4.scala:265:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:265:16]
          $fatal;	// @[ToAXI4.scala:265:16]
      end
      if (~reset & ~(~inc_127 | ~count_128)) begin	// @[ToAXI4.scala:257:28, :261:22, :266:{16,17,22,31}]
        if (`ASSERT_VERBOSE_COND_)	// @[ToAXI4.scala:266:16]
          $error("Assertion failed\n    at ToAXI4.scala:266 assert (!inc || count =/= maxCount.U) // overflow\n");	// @[ToAXI4.scala:266:16]
        if (`STOP_COND_)	// @[ToAXI4.scala:266:16]
          $fatal;	// @[ToAXI4.scala:266:16]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        counter = _RANDOM_0[3:0];	// @[Edges.scala:229:27]
        doneAW = _RANDOM_0[4];	// @[Edges.scala:229:27, ToAXI4.scala:164:30]
        r_holds_d = _RANDOM_0[5];	// @[Edges.scala:229:27, ToAXI4.scala:209:30]
        b_delay = _RANDOM_0[8:6];	// @[Edges.scala:229:27, ToAXI4.scala:212:24]
        r_first = _RANDOM_0[9];	// @[Edges.scala:229:27, ToAXI4.scala:227:28]
        r_denied_r = _RANDOM_0[10];	// @[Edges.scala:229:27, Reg.scala:19:16]
        count_1 = _RANDOM_0[11];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_2 = _RANDOM_0[13];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_3 = _RANDOM_0[15];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_4 = _RANDOM_0[17];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_5 = _RANDOM_0[19];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_6 = _RANDOM_0[21];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_7 = _RANDOM_0[23];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_8 = _RANDOM_0[25];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_9 = _RANDOM_0[27];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_10 = _RANDOM_0[29];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_11 = _RANDOM_0[31];	// @[Edges.scala:229:27, ToAXI4.scala:257:28]
        count_12 = _RANDOM_1[1];	// @[ToAXI4.scala:257:28]
        count_13 = _RANDOM_1[3];	// @[ToAXI4.scala:257:28]
        count_14 = _RANDOM_1[5];	// @[ToAXI4.scala:257:28]
        count_15 = _RANDOM_1[7];	// @[ToAXI4.scala:257:28]
        count_16 = _RANDOM_1[9];	// @[ToAXI4.scala:257:28]
        count_17 = _RANDOM_1[11];	// @[ToAXI4.scala:257:28]
        count_18 = _RANDOM_1[13];	// @[ToAXI4.scala:257:28]
        count_19 = _RANDOM_1[15];	// @[ToAXI4.scala:257:28]
        count_20 = _RANDOM_1[17];	// @[ToAXI4.scala:257:28]
        count_21 = _RANDOM_1[19];	// @[ToAXI4.scala:257:28]
        count_22 = _RANDOM_1[21];	// @[ToAXI4.scala:257:28]
        count_23 = _RANDOM_1[23];	// @[ToAXI4.scala:257:28]
        count_24 = _RANDOM_1[25];	// @[ToAXI4.scala:257:28]
        count_25 = _RANDOM_1[27];	// @[ToAXI4.scala:257:28]
        count_26 = _RANDOM_1[29];	// @[ToAXI4.scala:257:28]
        count_27 = _RANDOM_1[31];	// @[ToAXI4.scala:257:28]
        count_28 = _RANDOM_2[1];	// @[ToAXI4.scala:257:28]
        count_29 = _RANDOM_2[3];	// @[ToAXI4.scala:257:28]
        count_30 = _RANDOM_2[5];	// @[ToAXI4.scala:257:28]
        count_31 = _RANDOM_2[7];	// @[ToAXI4.scala:257:28]
        count_32 = _RANDOM_2[9];	// @[ToAXI4.scala:257:28]
        count_33 = _RANDOM_2[11];	// @[ToAXI4.scala:257:28]
        count_34 = _RANDOM_2[13];	// @[ToAXI4.scala:257:28]
        count_35 = _RANDOM_2[15];	// @[ToAXI4.scala:257:28]
        count_36 = _RANDOM_2[17];	// @[ToAXI4.scala:257:28]
        count_37 = _RANDOM_2[19];	// @[ToAXI4.scala:257:28]
        count_38 = _RANDOM_2[21];	// @[ToAXI4.scala:257:28]
        count_39 = _RANDOM_2[23];	// @[ToAXI4.scala:257:28]
        count_40 = _RANDOM_2[25];	// @[ToAXI4.scala:257:28]
        count_41 = _RANDOM_2[27];	// @[ToAXI4.scala:257:28]
        count_42 = _RANDOM_2[29];	// @[ToAXI4.scala:257:28]
        count_43 = _RANDOM_2[31];	// @[ToAXI4.scala:257:28]
        count_44 = _RANDOM_3[1];	// @[ToAXI4.scala:257:28]
        count_45 = _RANDOM_3[3];	// @[ToAXI4.scala:257:28]
        count_46 = _RANDOM_3[5];	// @[ToAXI4.scala:257:28]
        count_47 = _RANDOM_3[7];	// @[ToAXI4.scala:257:28]
        count_48 = _RANDOM_3[9];	// @[ToAXI4.scala:257:28]
        count_49 = _RANDOM_3[11];	// @[ToAXI4.scala:257:28]
        count_50 = _RANDOM_3[13];	// @[ToAXI4.scala:257:28]
        count_51 = _RANDOM_3[15];	// @[ToAXI4.scala:257:28]
        count_52 = _RANDOM_3[17];	// @[ToAXI4.scala:257:28]
        count_53 = _RANDOM_3[19];	// @[ToAXI4.scala:257:28]
        count_54 = _RANDOM_3[21];	// @[ToAXI4.scala:257:28]
        count_55 = _RANDOM_3[23];	// @[ToAXI4.scala:257:28]
        count_56 = _RANDOM_3[25];	// @[ToAXI4.scala:257:28]
        count_57 = _RANDOM_3[27];	// @[ToAXI4.scala:257:28]
        count_58 = _RANDOM_3[29];	// @[ToAXI4.scala:257:28]
        count_59 = _RANDOM_3[31];	// @[ToAXI4.scala:257:28]
        count_60 = _RANDOM_4[1];	// @[ToAXI4.scala:257:28]
        count_61 = _RANDOM_4[3];	// @[ToAXI4.scala:257:28]
        count_62 = _RANDOM_4[5];	// @[ToAXI4.scala:257:28]
        count_63 = _RANDOM_4[7];	// @[ToAXI4.scala:257:28]
        count_64 = _RANDOM_4[9];	// @[ToAXI4.scala:257:28]
        count_65 = _RANDOM_4[11];	// @[ToAXI4.scala:257:28]
        count_66 = _RANDOM_4[13];	// @[ToAXI4.scala:257:28]
        count_67 = _RANDOM_4[15];	// @[ToAXI4.scala:257:28]
        count_68 = _RANDOM_4[17];	// @[ToAXI4.scala:257:28]
        count_69 = _RANDOM_4[19];	// @[ToAXI4.scala:257:28]
        count_70 = _RANDOM_4[21];	// @[ToAXI4.scala:257:28]
        count_71 = _RANDOM_4[23];	// @[ToAXI4.scala:257:28]
        count_72 = _RANDOM_4[25];	// @[ToAXI4.scala:257:28]
        count_73 = _RANDOM_4[27];	// @[ToAXI4.scala:257:28]
        count_74 = _RANDOM_4[29];	// @[ToAXI4.scala:257:28]
        count_75 = _RANDOM_4[31];	// @[ToAXI4.scala:257:28]
        count_76 = _RANDOM_5[1];	// @[ToAXI4.scala:257:28]
        count_77 = _RANDOM_5[3];	// @[ToAXI4.scala:257:28]
        count_78 = _RANDOM_5[5];	// @[ToAXI4.scala:257:28]
        count_79 = _RANDOM_5[7];	// @[ToAXI4.scala:257:28]
        count_80 = _RANDOM_5[9];	// @[ToAXI4.scala:257:28]
        count_81 = _RANDOM_5[11];	// @[ToAXI4.scala:257:28]
        count_82 = _RANDOM_5[13];	// @[ToAXI4.scala:257:28]
        count_83 = _RANDOM_5[15];	// @[ToAXI4.scala:257:28]
        count_84 = _RANDOM_5[17];	// @[ToAXI4.scala:257:28]
        count_85 = _RANDOM_5[19];	// @[ToAXI4.scala:257:28]
        count_86 = _RANDOM_5[21];	// @[ToAXI4.scala:257:28]
        count_87 = _RANDOM_5[23];	// @[ToAXI4.scala:257:28]
        count_88 = _RANDOM_5[25];	// @[ToAXI4.scala:257:28]
        count_89 = _RANDOM_5[27];	// @[ToAXI4.scala:257:28]
        count_90 = _RANDOM_5[29];	// @[ToAXI4.scala:257:28]
        count_91 = _RANDOM_5[31];	// @[ToAXI4.scala:257:28]
        count_92 = _RANDOM_6[1];	// @[ToAXI4.scala:257:28]
        count_93 = _RANDOM_6[3];	// @[ToAXI4.scala:257:28]
        count_94 = _RANDOM_6[5];	// @[ToAXI4.scala:257:28]
        count_95 = _RANDOM_6[7];	// @[ToAXI4.scala:257:28]
        count_96 = _RANDOM_6[9];	// @[ToAXI4.scala:257:28]
        count_97 = _RANDOM_6[11];	// @[ToAXI4.scala:257:28]
        count_98 = _RANDOM_6[13];	// @[ToAXI4.scala:257:28]
        count_99 = _RANDOM_6[15];	// @[ToAXI4.scala:257:28]
        count_100 = _RANDOM_6[17];	// @[ToAXI4.scala:257:28]
        count_101 = _RANDOM_6[19];	// @[ToAXI4.scala:257:28]
        count_102 = _RANDOM_6[21];	// @[ToAXI4.scala:257:28]
        count_103 = _RANDOM_6[23];	// @[ToAXI4.scala:257:28]
        count_104 = _RANDOM_6[25];	// @[ToAXI4.scala:257:28]
        count_105 = _RANDOM_6[27];	// @[ToAXI4.scala:257:28]
        count_106 = _RANDOM_6[29];	// @[ToAXI4.scala:257:28]
        count_107 = _RANDOM_6[31];	// @[ToAXI4.scala:257:28]
        count_108 = _RANDOM_7[1];	// @[ToAXI4.scala:257:28]
        count_109 = _RANDOM_7[3];	// @[ToAXI4.scala:257:28]
        count_110 = _RANDOM_7[5];	// @[ToAXI4.scala:257:28]
        count_111 = _RANDOM_7[7];	// @[ToAXI4.scala:257:28]
        count_112 = _RANDOM_7[9];	// @[ToAXI4.scala:257:28]
        count_113 = _RANDOM_7[11];	// @[ToAXI4.scala:257:28]
        count_114 = _RANDOM_7[13];	// @[ToAXI4.scala:257:28]
        count_115 = _RANDOM_7[15];	// @[ToAXI4.scala:257:28]
        count_116 = _RANDOM_7[17];	// @[ToAXI4.scala:257:28]
        count_117 = _RANDOM_7[19];	// @[ToAXI4.scala:257:28]
        count_118 = _RANDOM_7[21];	// @[ToAXI4.scala:257:28]
        count_119 = _RANDOM_7[23];	// @[ToAXI4.scala:257:28]
        count_120 = _RANDOM_7[25];	// @[ToAXI4.scala:257:28]
        count_121 = _RANDOM_7[27];	// @[ToAXI4.scala:257:28]
        count_122 = _RANDOM_7[29];	// @[ToAXI4.scala:257:28]
        count_123 = _RANDOM_7[31];	// @[ToAXI4.scala:257:28]
        count_124 = _RANDOM_8[1];	// @[ToAXI4.scala:257:28]
        count_125 = _RANDOM_8[3];	// @[ToAXI4.scala:257:28]
        count_126 = _RANDOM_8[5];	// @[ToAXI4.scala:257:28]
        count_127 = _RANDOM_8[7];	// @[ToAXI4.scala:257:28]
        count_128 = _RANDOM_8[9];	// @[ToAXI4.scala:257:28]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Queue_47 deq (	// @[Decoupled.scala:375:21]
    .clock            (clock),
    .reset            (reset),
    .io_enq_valid     (~stall & auto_in_a_valid & ~(auto_in_a_bits_opcode[2]) & _out_w_valid_T_3),	// @[Edges.scala:92:{28,37}, ToAXI4.scala:198:49, :199:{21,52}, :202:54]
    .io_enq_bits_data (auto_in_a_bits_data),
    .io_enq_bits_strb (auto_in_a_bits_mask),
    .io_enq_bits_last (out_w_bits_last),	// @[Edges.scala:232:33]
    .io_deq_ready     (auto_out_w_ready),
    .io_enq_ready     (_deq_io_enq_ready),
    .io_deq_valid     (auto_out_w_valid),
    .io_deq_bits_data (auto_out_w_bits_data),
    .io_deq_bits_strb (auto_out_w_bits_strb),
    .io_deq_bits_last (auto_out_w_bits_last)
  );
  Queue_48 queue_arw_deq (	// @[Decoupled.scala:375:21]
    .clock                            (clock),
    .reset                            (reset),
    .io_enq_valid                     (out_arw_valid),	// @[ToAXI4.scala:200:45]
    .io_enq_bits_id                   (out_arw_bits_id),	// @[ToAXI4.scala:169:17]
    .io_enq_bits_addr                 (auto_in_a_bits_address),
    .io_enq_bits_len                  (~(_out_arw_bits_len_T_1[9:2])),	// @[package.scala:235:{46,71,76}]
    .io_enq_bits_size                 ((|(auto_in_a_bits_size[2:1])) ? 3'h2 : auto_in_a_bits_size),	// @[ToAXI4.scala:172:{23,31}]
    .io_enq_bits_cache                ({auto_in_a_bits_user_amba_prot_writealloc, auto_in_a_bits_user_amba_prot_readalloc, auto_in_a_bits_user_amba_prot_modifiable, auto_in_a_bits_user_amba_prot_bufferable}),	// @[Cat.scala:33:92]
    .io_enq_bits_prot                 ({auto_in_a_bits_user_amba_prot_fetch, ~auto_in_a_bits_user_amba_prot_secure, auto_in_a_bits_user_amba_prot_privileged}),	// @[Cat.scala:33:92, ToAXI4.scala:188:20]
    .io_enq_bits_echo_tl_state_size   ({1'h0, auto_in_a_bits_size}),	// @[ToAXI4.scala:110:76, :182:22]
    .io_enq_bits_echo_tl_state_source (auto_in_a_bits_source),
    .io_enq_bits_wen                  (~(auto_in_a_bits_opcode[2])),	// @[Edges.scala:92:{28,37}]
    .io_deq_ready                     (_queue_arw_deq_io_deq_bits_wen ? auto_out_aw_ready : auto_out_ar_ready),	// @[Decoupled.scala:375:21, ToAXI4.scala:160:29]
    .io_enq_ready                     (_queue_arw_deq_io_enq_ready),
    .io_deq_valid                     (_queue_arw_deq_io_deq_valid),
    .io_deq_bits_id                   (_queue_arw_deq_io_deq_bits_id),
    .io_deq_bits_addr                 (_queue_arw_deq_io_deq_bits_addr),
    .io_deq_bits_len                  (_queue_arw_deq_io_deq_bits_len),
    .io_deq_bits_size                 (_queue_arw_deq_io_deq_bits_size),
    .io_deq_bits_burst                (_queue_arw_deq_io_deq_bits_burst),
    .io_deq_bits_lock                 (_queue_arw_deq_io_deq_bits_lock),
    .io_deq_bits_cache                (_queue_arw_deq_io_deq_bits_cache),
    .io_deq_bits_prot                 (_queue_arw_deq_io_deq_bits_prot),
    .io_deq_bits_qos                  (_queue_arw_deq_io_deq_bits_qos),
    .io_deq_bits_echo_tl_state_size   (_queue_arw_deq_io_deq_bits_echo_tl_state_size),
    .io_deq_bits_echo_tl_state_source (_queue_arw_deq_io_deq_bits_echo_tl_state_source),
    .io_deq_bits_wen                  (_queue_arw_deq_io_deq_bits_wen)
  );
  assign auto_in_a_ready = bundleIn_0_a_ready;	// @[ToAXI4.scala:199:28]
  assign auto_in_d_valid = bundleIn_0_d_valid;	// @[ToAXI4.scala:222:24]
  assign auto_in_d_bits_opcode = {2'h0, r_wins};	// @[ToAXI4.scala:218:53, :230:39, :240:23]
  assign auto_in_d_bits_size = r_wins ? auto_out_r_bits_echo_tl_state_size[2:0] : auto_out_b_bits_echo_tl_state_size[2:0];	// @[Edges.scala:773:15, :789:15, ToAXI4.scala:218:53, :240:23]
  assign auto_in_d_bits_source = r_wins ? auto_out_r_bits_echo_tl_state_source : auto_out_b_bits_echo_tl_state_source;	// @[ToAXI4.scala:218:53, :240:23]
  assign auto_in_d_bits_denied = r_wins ? r_d_denied : (|auto_out_b_bits_resp);	// @[ToAXI4.scala:218:53, :231:39, :240:23, package.scala:80:42]
  assign auto_in_d_bits_data = auto_out_r_bits_data;
  assign auto_in_d_bits_corrupt = r_wins & ((|auto_out_r_bits_resp) | r_d_denied);	// @[ToAXI4.scala:218:53, :230:39, :233:96, :240:23, package.scala:80:42]
  assign auto_out_aw_valid = _queue_arw_deq_io_deq_valid & _queue_arw_deq_io_deq_bits_wen;	// @[Decoupled.scala:375:21, ToAXI4.scala:159:39]
  assign auto_out_aw_bits_id = _queue_arw_deq_io_deq_bits_id;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_addr = _queue_arw_deq_io_deq_bits_addr;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_len = _queue_arw_deq_io_deq_bits_len;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_size = _queue_arw_deq_io_deq_bits_size;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_burst = _queue_arw_deq_io_deq_bits_burst;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_lock = _queue_arw_deq_io_deq_bits_lock;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_cache = _queue_arw_deq_io_deq_bits_cache;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_prot = _queue_arw_deq_io_deq_bits_prot;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_qos = _queue_arw_deq_io_deq_bits_qos;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_echo_tl_state_size = _queue_arw_deq_io_deq_bits_echo_tl_state_size;	// @[Decoupled.scala:375:21]
  assign auto_out_aw_bits_echo_tl_state_source = _queue_arw_deq_io_deq_bits_echo_tl_state_source;	// @[Decoupled.scala:375:21]
  assign auto_out_b_ready = x1_b_ready;	// @[ToAXI4.scala:221:33]
  assign auto_out_ar_valid = _queue_arw_deq_io_deq_valid & ~_queue_arw_deq_io_deq_bits_wen;	// @[Decoupled.scala:375:21, ToAXI4.scala:158:{39,42}]
  assign auto_out_ar_bits_id = _queue_arw_deq_io_deq_bits_id;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_addr = _queue_arw_deq_io_deq_bits_addr;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_len = _queue_arw_deq_io_deq_bits_len;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_size = _queue_arw_deq_io_deq_bits_size;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_burst = _queue_arw_deq_io_deq_bits_burst;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_lock = _queue_arw_deq_io_deq_bits_lock;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_cache = _queue_arw_deq_io_deq_bits_cache;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_prot = _queue_arw_deq_io_deq_bits_prot;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_qos = _queue_arw_deq_io_deq_bits_qos;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_echo_tl_state_size = _queue_arw_deq_io_deq_bits_echo_tl_state_size;	// @[Decoupled.scala:375:21]
  assign auto_out_ar_bits_echo_tl_state_source = _queue_arw_deq_io_deq_bits_echo_tl_state_source;	// @[Decoupled.scala:375:21]
  assign auto_out_r_ready = x1_r_ready;	// @[ToAXI4.scala:220:33]
endmodule

